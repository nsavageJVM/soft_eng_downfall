<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Babel on Software Engineering</title>
    <link>/categories/babel/index.xml</link>
    <description>Recent content in Babel on Software Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright>
    <atom:link href="/categories/babel/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The javascript transpile dialectic part 3</title>
      <link>/2016/12/the-javascript-transpile-dialectic-part-3/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/the-javascript-transpile-dialectic-part-3/</guid>
      <description>

&lt;h3 id=&#34;objective&#34;&gt;Objective&lt;/h3&gt;

&lt;p&gt;Review setup for different transpiler engines. Simple code for transpiler engines&lt;/p&gt;

&lt;h3 id=&#34;target-audience&#34;&gt;Target Audience&lt;/h3&gt;

&lt;p&gt;Developers new to modern javascript frameworks and tooling&lt;/p&gt;

&lt;h3 id=&#34;source-documents&#34;&gt;Source Documents&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;//facebook.github.io/react/tutorial/tutorial.html&#34;&gt;react&lt;/a&gt;
&lt;a href=&#34;//babeljs.io&#34;&gt;babel&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;//webpack.github.io&#34;&gt;webpack&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;//github.com/jugend/webpack-react-hmr-examples&#34;&gt;React Hot Module Replacement&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;//github.com/yahoo/pure&#34;&gt;purecss&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;result&#34;&gt;Result&lt;/h3&gt;

&lt;p&gt;See the Demo app for &lt;a href=&#34;//github.com/nsavageJVM/transpilers-dev/tree/master/react&#34;&gt;react&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The demo code has a number of setup options see see top level &lt;a href=&#34;https://github.com/nsavageJVM/transpilers-dev&#34;&gt;readme&lt;/a&gt; for general instructions.&lt;br /&gt;
The transpile is driven via webpack and the dev server. The express dev &lt;a href=&#34;//github.com/nsavageJVM/transpilers-dev/blob/master/react/server.js&#34;&gt;server&lt;/a&gt; uses the hot reload middleware for react. The code is
as simple as possible to highlight the relationships in the code between the webpack configuration syntax, the plugin setup and the dev server.
The webpack stylus css translation on &lt;a href=&#34;//github.com/yahoo/pure&#34;&gt;purecss&lt;/a&gt; is included to show the parralel css translation alongside the JSX transpilation.&lt;/p&gt;

&lt;h4 id=&#34;transpile&#34;&gt;Transpile&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;npm run start&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;test&#34;&gt;Test&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;discussion&#34;&gt;Discussion&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Transpile with the dev server in development&lt;/li&gt;
&lt;li&gt;see &lt;a href=&#34;//github.com/nsavageJVM/transpilers-dev/blob/master/react/webpack.dev.config.js&#34;&gt;development webpack config&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;see &lt;a href=&#34;//github.com/nsavageJVM/transpilers-dev/blob/master/react/.babelrc&#34;&gt;babel plugin config&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;more-details&#34;&gt;More Details&lt;/h3&gt;

&lt;p&gt;Webpack uses Babel to transpile ECMAScript 2015 to  ES5. Some features of ECMAScript 2015 do not directly map to ES5.
{Iterators, Proxies, generator functions } this set is not &lt;a href=&#34;babeljs.io/docs/learn-es2015/&#34;&gt;inclusive&lt;/a&gt; see &lt;a href=&#34;//babeljs.io/docs/usage/polyfill/&#34;&gt;polyfill&lt;/a&gt;&lt;br /&gt;
Webpack uses middleware&lt;br /&gt;
1. &lt;a href=&#34;//github.com/webpack/webpack-dev-middleware&#34;&gt;webpack-dev-middleware&lt;/a&gt;&lt;br /&gt;
2. &lt;a href=&#34;//github.com/glenjamin/webpack-hot-middleware&#34;&gt;webpack-hot-middleware&lt;/a&gt;&lt;br /&gt;
3. &lt;a href=&#34;//github.com/webpack/docs/wiki/hot-module-replacement-with-webpack&#34;&gt;hot module replacement&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;see &lt;a href=&#34;//github.com/nsavageJVM/transpilers-dev/blob/master/react/server.js&#34;&gt;dev server &lt;/a&gt;  lines 9 to 15&lt;br /&gt;
see &lt;a href=&#34;//github.com/nsavageJVM/transpilers-dev/blob/master/react/webpack.dev.config.js&#34;&gt;dev server hot reload config&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;line 1 and 23 HotModuleReplacementPlugin&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;line 19 &lt;code&gt;publicPath&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;The react setup is a lot of work even with this simple set up. Complex relationships in the code and the configuration files take a while to get used too.
However the transpiling with the dev server is a significant accomplishment.&lt;br /&gt;
I recall in the early days of the google closure library trying to set up a similar workflow with the closure compiler transpiling off a url endpoint so the code would transpile like this in real time and I was never able to get it to work.&lt;br /&gt;
Overall the jsweet transpiler was the least painful experience. React has tremendous potential but once you start configuring the &lt;code&gt;redux store&lt;/code&gt; with &lt;code&gt;actions&lt;/code&gt; dispatching via &lt;code&gt;reducers&lt;/code&gt; the code and setup configurations can be heavy going.&lt;br /&gt;
If you are a software engineer and you are programming in a range of languages and frameworks on a daily basis then encapsulating the details away with a framework like &lt;code&gt;jsweet&lt;/code&gt; is a good option.&lt;/p&gt;

&lt;p&gt;Google closure still has the best &lt;a href=&#34;//google.github.io/closure-library/source/closure/goog/demos/&#34;&gt;rich text editor&lt;/a&gt; and the closure compiler leads the benchnark &lt;a href=&#34;//nolanlawson.com/2016/08/15/the-cost-of-small-modules/&#34;&gt;metrics&lt;/a&gt; and does even better for &lt;code&gt;advanced&lt;/code&gt; optimisations.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;//github.com/nsavageJVM/transpilers-dev/tree/master/react&#34;&gt;Demo app for react&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;////github.com/nsavageJVM/transpilers-dev&#34;&gt;Demo app for all series parts&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>