<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Engineering</title>
    <link>/</link>
    <description>Recent content on Software Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright>
    <lastBuildDate>Thu, 20 Apr 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JVM signal processing part 1</title>
      <link>/2017/04/jvm-signal-processing-part-1/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/04/jvm-signal-processing-part-1/</guid>
      <description>Objective Simple demo code for JVM signal processing. Review the setup and configuration for Scala Breeze signal processing.
Target Audience JVM Developers new to modern signal processing frameworks and tooling
Source Documents Physionet
QRS complex
First-Derivative Based QRS Detection Algorithm
Shannon energy
Shannon energy non linear Algorithm
Convolution
Convolution Filters Scala Breeze
Java Colt Project
Scala Demo app
Summary Use First-Derivative Based QRS Detection Algorithm implemented in Scala Breeze for detecting R-R interval of a ECG signal</description>
    </item>
    
    <item>
      <title>Java video streaming part 2</title>
      <link>/2017/04/java-video-streaming-part-2/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/04/java-video-streaming-part-2/</guid>
      <description>Objective Simple demo code for Java video streaming. Review the setup and configuration for different video streaming engines.
Target Audience Java Developers new to modern video streaming frameworks and tooling
Source Documents ffmpeg
Real Time Streaming Protocol(RTSP)
Java FX media support
Java FX media support restrictions
vlcj
Java Media Framework
Java Media Framework RTSP Support
Video Container
JavaFX Demo app for RTSP
Golang utility for ffmpeg transcode
Summary Use ffmpeg to transcode a rtsp stream to a file for JavaFX video client.</description>
    </item>
    
    <item>
      <title>Java video streaming part 1</title>
      <link>/2017/01/java-video-streaming-part-1/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/01/java-video-streaming-part-1/</guid>
      <description>Objective Simple demo code for Java video streaming. Review the setup and configuration for different video streaming engines.
Target Audience Java Developers new to modern video streaming frameworks and tooling
Source Documents gradle wrapper
vlc vlcj
vlcj javafx
JavaFX Graphics System
Java Native Interface
Java Native Access (JNA)
YouTube Data API
JavaFX Demo app for vlcj
Summary To write video streaming applications in Java you need to understand an underlying architecture, processes, tools and frameworks.</description>
    </item>
    
    <item>
      <title>The javascript transpile dialectic part 3</title>
      <link>/2016/12/the-javascript-transpile-dialectic-part-3/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/the-javascript-transpile-dialectic-part-3/</guid>
      <description>Objective Simple demo code for transpiling to Javascript. Review the setup and configuration for different transpiler engines.
Target Audience Developers new to modern javascript frameworks and tooling
Source Documents react babel
webpack
React Hot Module Replacement
purecss
Result See the Demo app for react
The demo code has a number of setup options see see top level readme for general instructions.
The transpile operation is driven via webpack and the dev server.</description>
    </item>
    
    <item>
      <title>The javascript transpile dialectic part 2</title>
      <link>/2016/12/the-javascript-transpile-dialectic-part-2/</link>
      <pubDate>Mon, 05 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/the-javascript-transpile-dialectic-part-2/</guid>
      <description>Objective Simple demo code for transpiling to Javascript. Review the setup and configuration for different transpiler engines.
Target Audience Developers new to modern javascript frameworks and tooling
Source Documents Closure Compiler
google-closure-library
closurecheatsheet
Summary The Closure Compiler transpiler takes ECMAScript 2015 to optimized, minified ES3. The google-closure-library is notable because it is used to build Gmail and other top level google applications like Google Docs. The compiler is a Java application based on Rhino from Mozilla with an associated set of python tools sometimes refered to as closure build tools.</description>
    </item>
    
    <item>
      <title>The javascript transpile dialectic part 1</title>
      <link>/2016/12/the-javascript-transpile-dialectic-part-1/</link>
      <pubDate>Sun, 04 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/the-javascript-transpile-dialectic-part-1/</guid>
      <description>Objective Simple demo code for transpiling to Javascript. Review the setup and configuration for different transpiler engines.
Target Audience Java Developers new to modern javascript frameworks and tooling
Source Documents gradle wrapper gradle-node-plugin jsweet transpiler
TypeScript language
TypeScript Declaration File
TypeScript type 
TypeScript namespace
ECMA-262 6th Edition
ECMAScript 5
Summary Writing high-performance JavaScript is a challenge, many tools and Javascript dialets exist, for new developers the nomenculture can be confusing and npm is Massive.</description>
    </item>
    
    <item>
      <title>Issues generating installer with  BitRock InstallBuilder</title>
      <link>/2016/11/issues-generating-installer-with--bitrock-installbuilder/</link>
      <pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/issues-generating-installer-with--bitrock-installbuilder/</guid>
      <description>Objective Simple code to create a linux installer with BitRocks InstallBuilder
Target Audience Developers new to BitRocks InstallBuilder and Cross-platform installation Tools
Source Documents Bitrock Installbuilder
Bitrock Installbuilder Documentation
Bitrock Installbuilder Java Runtimes
NetBeans Native packaging
JavaFX Packager 
gradle wrapper
Summary Resolve path issues for the bundled java runtime(jre) for a native installer created by using Bitrocks Installbuilder.
Result See the Demo app
Using the gradle wrapper build with .</description>
    </item>
    
    <item>
      <title>Issues re Reporting tools and Frameworks</title>
      <link>/2016/11/issues-re-reporting-tools-and-frameworks/</link>
      <pubDate>Wed, 23 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/issues-re-reporting-tools-and-frameworks/</guid>
      <description>Objective Simple code to generate the Jasper Reports Charting Samples
Target Audience Developers new to Jasper Reports
Source Documents jasper reports
jasper reports server samples
jasper reports workflow 
jasper reports syntax
jasper reports library
jasper reports charts
ant ivy intergration
gradle wrapper
Summary A refactor of the jasper reports charts samples from the jasper reports server samples to run with the gradle wrapper.
Result A Demo app run with the gradle wrapper using</description>
    </item>
    
    <item>
      <title>Issues re react-with-zero-configuration</title>
      <link>/2016/11/issues-re-react-with-zero-configuration/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/issues-re-react-with-zero-configuration/</guid>
      <description>Objective Describe the use of react-with-zero-configuration to deploy to heroku
Target Audience Developers new to react
Source Documents react-with-zero-configuration
heroku react-with-zero-configuration 
heroku react buildpack
Summary Facebook release a build environment for react that abstracts away the lower level configuration and dependency management.
Result This is a good thing until you run npm run eject
Discussion I ran into this when attempting to deploy a react app to Heroku. I was able to get react to deploy and build on Heroku with the following</description>
    </item>
    
    <item>
      <title>Issues re  Spring Cloud Netflix &lt;span style=&#34;font-size:18px;&#34;&gt; @EnableCircuitBreaker, @EnableHystrix &lt;/span&gt;</title>
      <link>/2016/11/issues-re--spring-cloud-netflix-span-stylefont-size18px-enablecircuitbreaker-enablehystrix-/span/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/issues-re--spring-cloud-netflix-span-stylefont-size18px-enablecircuitbreaker-enablehystrix-/span/</guid>
      <description>Objective Clarify use of Spring Cloud Netflix @EnableCircuitBreaker, @EnableHystrix
Target Audience Developers new to Spring Cloud Platform
Source Documents Microservice Architecture
Spring Cloud
Spring Cloud Netflix 
Hystrix 
finagle
javaslang-circuitbreaker
@EnableHystrix
@EnableCircuitBreaker
hystrix-javanica
Summary Two existing Spring Cloud Netflix annotations to enable the circuit breaker pattern exist. At this time the documentation is not clear as to the distinction in behaviour.
Result Use @EnableHystrix to implement the circuit breaker pattern specifically with Hystrix on the classpath.</description>
    </item>
    
  </channel>
</rss>